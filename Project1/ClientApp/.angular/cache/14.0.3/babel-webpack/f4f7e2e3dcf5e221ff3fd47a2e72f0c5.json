{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/source/repos/ClalitTest/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppConfigService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.setBaseUrl = new Subject();\n  }\n\n  loadAppConfig() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpClient.get('/assets/config.json').subscribe(data => {\n        _this.appConfig = data;\n\n        _this.setBaseUrl.next(_this.appConfig);\n      });\n    })();\n  }\n\n  apiBaseUrl() {\n    if (!this.appConfig) {\n      throw Error('Config file not loaded!');\n    }\n\n    return this.appConfig.apiBaseUrl;\n  }\n\n}\n\nAppConfigService.ɵfac = function AppConfigService_Factory(t) {\n  return new (t || AppConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAppConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppConfigService,\n  factory: AppConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,OAAT,QAAwB,MAAxB;;;AAIA,OAAM,MAAOC,gBAAP,CAAuB;EAI3BC,YAAoBC,UAApB,EAA0C;IAAtB;IADpB,kBAA2B,IAAIH,OAAJ,EAA3B;EAC+C;;EAEzCI,aAAa;IAAA;;IAAA;MACjB,aAAa,KAAI,CAACD,UAAL,CAAgBE,GAAhB,CAAoB,qBAApB,EACVC,SADU,CACAC,IAAI,IAAG;QAChB,KAAI,CAACC,SAAL,GAAiBD,IAAjB;;QACA,KAAI,CAACE,UAAL,CAAgBC,IAAhB,CAAqB,KAAI,CAACF,SAA1B;MACD,CAJU,CAAb;IADiB;EAMlB;;EAEDG,UAAU;IACR,IAAI,CAAC,KAAKH,SAAV,EAAqB;MACnB,MAAMI,KAAK,CAAC,yBAAD,CAAX;IACD;;IACD,OAAO,KAAKJ,SAAL,CAAeG,UAAtB;EACD;;AAnB0B;;;mBAAhBV,kBAAgBY;AAAA;;;SAAhBZ;EAAgBa,SAAhBb,gBAAgB;EAAAc,YAFf","names":["Subject","AppConfigService","constructor","httpClient","loadAppConfig","get","subscribe","data","appConfig","setBaseUrl","next","apiBaseUrl","Error","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\source\\repos\\ClalitTest\\Project1\\ClientApp\\src\\app\\services\\app-config.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfigService {\n\n  public appConfig: any;\n  setBaseUrl: Subject<any> = new Subject();\n  constructor(private httpClient: HttpClient) { }\n\n  async loadAppConfig() {\n    return await this.httpClient.get('/assets/config.json')\n      .subscribe(data => {\n        this.appConfig = data;\n        this.setBaseUrl.next(this.appConfig)\n      });\n  }\n\n  apiBaseUrl(): string {\n    if (!this.appConfig) {\n      throw Error('Config file not loaded!');\n    }\n    return this.appConfig.apiBaseUrl;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}